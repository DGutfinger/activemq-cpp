/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#include <activemq/connector/openwire/commands/JournalTopicAck.h>

using namespace std;
using namespace activemq;
using namespace activemq::connector;
using namespace activemq::connector::openwire;
using namespace activemq::connector::openwire::commands;

/*
 *
 *  Command and marshalling code for OpenWire format for JournalTopicAck
 *
 *
 *  NOTE!: This file is autogenerated - do not modify!
 *         if you need to make a change, please see the Java Classes in the
 *         activemq-core module
 *
 */
////////////////////////////////////////////////////////////////////////////////
JournalTopicAck::JournalTopicAck()
{
    this->destination = NULL;
    this->messageId = NULL;
    this->messageSequenceId = 0;
    this->subscritionName = "";
    this->clientId = "";
    this->transactionId = NULL;
}

////////////////////////////////////////////////////////////////////////////////
JournalTopicAck::~JournalTopicAck()
{
    delete this->destination;
    delete this->messageId;
    delete this->transactionId;
}

////////////////////////////////////////////////////////////////////////////////
JournalTopicAck* JournalTopicAck::clone() const {
    JournalTopicAck* journalTopicAck = new JournalTopicAck();

    // Copy the data from the base class or classes
    BaseDataStructure::copy( journalTopicAck );

    journalTopicAck->destination = this->getDestination();
    journalTopicAck->messageId = this->getMessageId();
    journalTopicAck->messageSequenceId = this->getMessageSequenceId()->clone();
    journalTopicAck->subscritionName = this->getSubscritionName();
    journalTopicAck->clientId = this->getClientId();
    journalTopicAck->transactionId = this->getTransactionId();

    return journalTopicAck
}

////////////////////////////////////////////////////////////////////////////////
void JournalTopicAck::copy( JournalTopicAck* dest ) const {

    // Copy the data from the base class or classes
    BaseDataStructure::copy( journalTopicAck );

    dest->setDestination( this->getDestination() );
    dest->setMessageId( this->getMessageId() );
    dest->setMessageSequenceId( this->getMessageSequenceId()->clone() );
    dest->setSubscritionName( this->getSubscritionName() );
    dest->setClientId( this->getClientId() );
    dest->setTransactionId( this->getTransactionId() );
}

////////////////////////////////////////////////////////////////////////////////
unsigned char JournalTopicAck::getDataStructureType() const {
    return JournalTopicAck::ID_JOURNALTOPICACK; 
}

////////////////////////////////////////////////////////////////////////////////
const ActiveMQDestination* JournalTopicAck::getDestination() const {
    return destination;
}

////////////////////////////////////////////////////////////////////////////////
ActiveMQDestination* JournalTopicAck::getDestination() {
    return destination;
}

////////////////////////////////////////////////////////////////////////////////
void JournalTopicAck::setDestination(ActiveMQDestination* destination ) {
    this->destination = destination;
}

////////////////////////////////////////////////////////////////////////////////
const MessageId* JournalTopicAck::getMessageId() const {
    return messageId;
}

////////////////////////////////////////////////////////////////////////////////
MessageId* JournalTopicAck::getMessageId() {
    return messageId;
}

////////////////////////////////////////////////////////////////////////////////
void JournalTopicAck::setMessageId(MessageId* messageId ) {
    this->messageId = messageId;
}

////////////////////////////////////////////////////////////////////////////////
const long long JournalTopicAck::getMessageSequenceId() const {
    return messageSequenceId;
}

////////////////////////////////////////////////////////////////////////////////
long long JournalTopicAck::getMessageSequenceId() {
    return messageSequenceId;
}

////////////////////////////////////////////////////////////////////////////////
void JournalTopicAck::setMessageSequenceId(long long messageSequenceId ) {
    this->messageSequenceId = messageSequenceId;
}

////////////////////////////////////////////////////////////////////////////////
const std::string& JournalTopicAck::getSubscritionName() const {
    return subscritionName;
}

////////////////////////////////////////////////////////////////////////////////
std::string& JournalTopicAck::getSubscritionName() {
    return subscritionName;
}

////////////////////////////////////////////////////////////////////////////////
void JournalTopicAck::setSubscritionName(const std::string& subscritionName ) {
    this->subscritionName = subscritionName;
}

////////////////////////////////////////////////////////////////////////////////
const std::string& JournalTopicAck::getClientId() const {
    return clientId;
}

////////////////////////////////////////////////////////////////////////////////
std::string& JournalTopicAck::getClientId() {
    return clientId;
}

////////////////////////////////////////////////////////////////////////////////
void JournalTopicAck::setClientId(const std::string& clientId ) {
    this->clientId = clientId;
}

////////////////////////////////////////////////////////////////////////////////
const TransactionId* JournalTopicAck::getTransactionId() const {
    return transactionId;
}

////////////////////////////////////////////////////////////////////////////////
TransactionId* JournalTopicAck::getTransactionId() {
    return transactionId;
}

////////////////////////////////////////////////////////////////////////////////
void JournalTopicAck::setTransactionId(TransactionId* transactionId ) {
    this->transactionId = transactionId;
}


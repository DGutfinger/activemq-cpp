/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#include <activemq/connector/openwire/commands/DataResponse.h>

using namespace std;
using namespace activemq;
using namespace activemq::connector;
using namespace activemq::connector::openwire;
using namespace activemq::connector::openwire::commands;

/*
 *
 *  Command and marshalling code for OpenWire format for DataResponse
 *
 *
 *  NOTE!: This file is autogenerated - do not modify!
 *         if you need to make a change, please see the Java Classes in the
 *         activemq-core module
 *
 */
////////////////////////////////////////////////////////////////////////////////
DataResponse::DataResponse()
{
    this->data = NULL;
}

////////////////////////////////////////////////////////////////////////////////
DataResponse::~DataResponse()
{
    delete this->data;
}

////////////////////////////////////////////////////////////////////////////////
DataResponse* DataResponse::clone() const {
    DataResponse* dataResponse = new DataResponse();

    // Copy the data from the base class or classes
    Response::copy( dataResponse );

    dataResponse->data = this->getData();

    return dataResponse
}

////////////////////////////////////////////////////////////////////////////////
void DataResponse::copy( DataResponse* dest ) const {

    // Copy the data from the base class or classes
    Response::copy( dataResponse );

    dest->setData( this->getData() );
}

////////////////////////////////////////////////////////////////////////////////
unsigned char DataResponse::getDataStructureType() const {
    return DataResponse::ID_DATARESPONSE; 
}

////////////////////////////////////////////////////////////////////////////////
const DataStructure* DataResponse::getData() const {
    return data;
}

////////////////////////////////////////////////////////////////////////////////
DataStructure* DataResponse::getData() {
    return data;
}

////////////////////////////////////////////////////////////////////////////////
void DataResponse::setData(DataStructure* data ) {
    this->data = data;
}

